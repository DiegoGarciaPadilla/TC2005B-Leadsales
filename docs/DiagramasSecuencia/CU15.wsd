@startuml CU15

actor Owner
boundary routes
boundary view.roles.ejs
control rol.controller.js
entity rol.model.js
database leadtics

== GET /roles/editarRol/:id ==

Owner -> routes : GET /roles/editarRol/:id
activate routes

routes -> rol.controller.js : getEditarRol
deactivate routes
activate rol.controller.js

rol.controller.js ->> rol.model.js : fetchById()
activate rol.model.js

rol.model.js -> leadtics : db.execute("SELECT * FROM roles WHERE id = ? AND FechaHoraEliminado IS NULL")
activate leadtics

leadtics --> rol.model.js : rol
deactivate leadtics

rol.model.js --> rol.controller.js :rol
deactivate rol.model.js

rol.controller.js -> view.roles.ejs : response.render('roles/editarRol', {rol.IDRol})
deactivate rol.controller.js
activate view.roles.ejs

view.roles.ejs -> Owner : HTML
deactivate view.roles.ejs

== POST /roles/editarRol/:id ==

Owner -> routes : POST /roles/editarRol/:id
activate routes

routes -> rol.controller.js : postEditarRol
deactivate routes
activate rol.controller.js

rol.controller.js ->> rol.model.js : updateRolById()
activate rol.model.js

rol.model.js -> leadtics : db.execute("UPDATE roles SET nombre = ?, DescripcionRol = ? WHERE id = ?")
activate leadtics

leadtics --> rol.model.js : result
deactivate leadtics

rol.model.js --> rol.controller.js : result
deactivate rol.model.js

rol.controller.js -> routes : redirect /roles
deactivate rol.controller.js
activate routes

routes -> Owner : HTML
deactivate routes

@enduml