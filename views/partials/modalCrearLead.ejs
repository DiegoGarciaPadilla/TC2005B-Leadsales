<div id="fondoModalCrearLead" class="fixed inset-0 flex items-center justify-center z-50 hidden bg-black bg-opacity-50"
  onclick="toggleModal(event)">
  <div id="modalForms" class="bg-white rounded shadow-lg p-8 m-4 max-w-xs max-h-full text-center">

    <p class="mt-2 mb-2 font-bold text-red-700 text-left" style="font-size: 12px;"> * Obligatorio </p>
    <div id="div-error" class="p-4 mb-4 text-sm text-red-800 rounded-lg bg-red-50" role="alert" style="display: none;">
      <span class="font-bold"> Cuidado: </span>
      <span id="error-message"> </span>
    </div>

    <form id="crearLeadModal">
      <input type="hidden" id="_csrf" name="_csrf" value="<%= csrfToken %>">
      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="nombre">
          Nombre
          <span class="font-bold text-red-700"> * </span>
        </label>
        <input
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
          id="nombre" type="text" placeholder="Nombre" name="nombre" required>
      </div>
      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="telefono">
          Teléfono
        </label>
        <input
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
          id="telefono" type="text" placeholder="Teléfono" name="telefono">
      </div>
      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="embudo">
          Embudo
          <span class="font-bold text-red-700"> * </span>
        </label>
        <input
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
          id="embudo" type="text" placeholder="Embudo" name="embudo" required>
      </div>
      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="asignadoa">
          Asignado a
          <span class="font-bold text-red-700"> * </span>
        </label>
        <select id="asignado" name="asignadoa"
          class="bg-gray-50 border border-gray-300 text-gray-700 leading-tight rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5"
          required>
          <option selected> Elige un usuario </option>
          <% for (let i=0; i < usuarios.length; i++) { %>
            <option value="<%= usuarios[i].Nombre + ' ' + usuarios[i].ApellidoPaterno %>">
              <%= usuarios[i].Nombre + ' ' + usuarios[i].ApellidoPaterno %>
            </option>
            <% } %>
        </select>
      </div>
      <div class="flex items-center justify-between">
        <button id="crearLeadBoton"
          class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">
          Crear
        </button>
      </div>
    </form>
  </div>
</div>

<script>
  const telefono = document.getElementById('telefono');
  const submitButton = document.getElementById('submit-button');

  const errorDiv = document.getElementById('div-error');
  const errorMessage = document.getElementById('error-message');

  function toggleModal(event) {
    var modal = document.getElementById('fondoModalCrearLead');
    if (event.target.id == "butonCrearLead" || event.target.id == "fondoModalCrearLead") {
      if (modal.style.display === "none" || modal.style.display === "") {
        modal.style.display = "flex";
      } else {
        modal.style.display = "none";
      }
    }
  }

  function checkTelefono() {
    const phoneRegex = /^[0-9]*$/;
    if (!phoneRegex.test(telefono.value)) {
      errorMessage.textContent = 'El teléfono solo debe contener números.';
      submitButton.disabled = true;
      errorDiv.style.display = 'block';
    } else {
      errorMessage.textContent = '';
      submitButton.disabled = false;
      errorDiv.style.display = 'none';
    }
  }

  telefono.addEventListener('input', checkTelefono);
</script>

<script>

  document.addEventListener('DOMContentLoaded', function () {
    // Obtén el botón por su ID
    const button = document.getElementById('crearLeadBoton');

    // Agrega el controlador de eventos 'click' al botón
    button.addEventListener('click', function (event) {
      // Prevenir el comportamiento predeterminado del botón
      event.preventDefault();

      // Llama a la función crearLead
      crearLead();
    });
  });

  function crearLead() {
    const nombre = document.getElementById('nombre').value;
    const telefono = document.getElementById('telefono').value;
    const embudo = document.getElementById('embudo').value;
    const asignadoa = document.getElementById('asignado').value;
    const csrf = document.getElementById('_csrf').value;

    // Realiza la validación de los campos aquí, si es necesario


    fetch('/directorio/crearLead', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'csrf-token': csrf,
      },
      body: JSON.stringify({
        nombre: nombre,
        telefono: telefono,
        embudo: embudo,
        asignadoa: asignadoa
      })
    })
      .then(response => response.json()) // Convertir la respuesta en JSON
      .then(data => {
        console.log(data);
        // Buscar el elemento en el DOM
        const tableBody = document.getElementById('containerElements');

        if (tableBody) {
          // Si el elemento existe, hacer algo...
          console.log('El elemento existe');
          const row = tableBody.insertRow(0);

          /// Agregar nuevas celdas a la fila en el orden deseado
          const cell0 = row.insertCell(0); // Checkbox
          const cell1 = row.insertCell(1); // Nombre
          const cell2 = row.insertCell(2); // Ultimo mensaje
          const cell3 = row.insertCell(3); // Primer mensaje
          const cell4 = row.insertCell(4); // Asignado a
          const cell5 = row.insertCell(5); // Telefono
          const cell6 = row.insertCell(6); // Consulta mas (boton)

          // Establecer el contenido de las celdas
          cell1.textContent = data.lead.Nombre;
          cell2.textContent = data.lead.Ultimomensaje; // Asegúrate de que este es el nombre correcto de la propiedad
          cell3.textContent = data.lead.Primermensaje; // Asegúrate de que este es el nombre correcto de la propiedad
          cell4.textContent = data.lead.Asignadoa;
          cell5.textContent = data.lead.Telefono;

          // Crear un nuevo botón y agregarlo a la celda
          const buttonConsultar = document.createElement('button');
          buttonConsultar.textContent = 'Consulta más';
          cell6.appendChild(buttonConsultar);
          
          const buttonCheck = document.createElement('input');
          buttonCheck.type = 'checkbox';
          cell0.appendChild(buttonCheck);

          cell1.classList.add('clase-de-la-celda'); // Reemplaza 'clase-de-la-celda' con la clase real
          cell2.classList.add('clase-de-la-celda'); // Reemplaza 'clase-de-la-celda' con la clase real
          cell3.classList.add('clase-de-la-celda'); // Reemplaza 'clase-de-la-celda' con la clase real
          cell4.classList.add('clase-de-la-celda'); // Reemplaza 'clase-de-la-celda' con la clase real
          cell5.classList.add('clase-de-la-celda'); // Reemplaza 'clase-de-la-celda' con la clase real
          cell6.classList.add('clase-de-la-celda'); // Reemplaza 'clase-de-la-celda' con la clase real

        } else {
          // Si el elemento no existe, hacer algo diferente...
          console.log('El elemento no existe');
        }

      })
      .catch(error => {
        // Manejar cualquier error que ocurra durante la solicitud
      });
  }
</script>